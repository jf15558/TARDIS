% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commute.R
\name{commute}
\alias{commute}
\title{commute}
\usage{
commute(tardis, weights = NULL, origin, dest, verbose = TRUE)
}
\arguments{
\item{tardis}{An object of class 'tardis', produced by create_tardis}

\item{weights}{If not NULL, a vector of weights to be used instead of the
geographic distances in tardis. All entries must be >= 0
and finite (NaN or Inf), or NA. Typically the output of weight_tgraph}

\item{origin}{A simple features collection produced by stp, denoting
the origin cells for the commutes}

\item{dest}{As for origin, but for the destination points. Unlike for lcp
the directionality in time does not matter}

\item{verbose}{A logical indicating whether function progress should be
reported to the user.}
}
\value{
A list of vectors containing the layer-discrete commute times for
each segment of the input least cost paths
}
\description{
Calculate the commute time between the start and end of a least cost path.
The commute time is the degree of 'resistance' between two points in a
graph and provides a measure of the practical difficulty of traversing
between them, regardless of the optimal route offered by the intervening
least cost path. The commute time calculation requires a graph with
bidirectional edges. Consequently, the average of the weights for pairs of
edges are calculated within each graph layer, rather than considering their
potential asymmetries.
}
\examples{
#library(terra)
#library(TARDIS)

#gal <- galapagos()
#gal <- crop(gal, extent(-92, -88, -2, 1))
#gal_m <- classify(gal, rcl = matrix(c(-Inf, 0, NA, 0, Inf, 1),
#                                    ncol = 3, byrow = T), right = F)
#gt <- create_tardis(gal, times = c(seq(2.25, 0, -0.5), 0), mask = gal_m)

#vars = list(elev = classify(gal, cbind(-Inf, 0, 0)))
#gtw <- weight_tardis(test2, vars = vars,
#                     mfun = function(origin, dest, lnum, ...) {
#                               (origin$hdist^2 + abs(origin$vdist)^2) * 10})

#org <- rbind(c(-89, -1.05, 2), c(-89.5, -0.7, 2))
#dst <- rbind(c(-91.2, -1, 0), c(-91.6, -0.4, 0))
#pts <- stp(test2, rbind(org, dst))

#foo <- commute(tardis = gt, weights = gtw, pts[1:2,], pts[3:4,])
}
