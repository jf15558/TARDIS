% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/link_mask.R
\name{link_mask}
\alias{link_mask}
\title{link_mask}
\usage{
link_mask(mask, mode = "lines", alg = "v", verbose = TRUE)
}
\arguments{
\item{mask}{A SpatRaster of geographic masks containing 1 (unmasked) or NA
(masked) values}

\item{mode}{One of 'cells' or 'lines'. If you are using this function
directly, then the default 'lines' is probably the desired result.}

\item{alg}{The linkage algorithm to be used. By default, this is "v", the
voronoi linkage method which is superior and generally quite robust. This
could still fail though for extremely topologically complex masks, so
alternatively, "k" can be used to implement k-nearest neighbour links.
This produces similar results to the other method, and is guaranteed to
return complete linkage.}

\item{verbose}{A logical to determine whether function progress should be
reported. Useful when dealing with large rasters (high resolution and/or many
layers).}
}
\value{
If mode = 'cells', a list of matrices with as many elements as
layers in x. Each matrix consists of two columns of cell IDs forming the
bridge pairs for its corresponding layer in x. If mode = 'lines', then a
list of sf multilinestrings, each of which can be plotted with its
corresponding layer in x to visualise the bridges.
}
\description{
Check a set of geographic mask rasters to detect islands and calculate
optimal bridging points between them. The function has two modes. Mode
'cells' returns the pairs of cell IDs forming each bridge. Cell IDs are
given as R's standard cell number order for raster objects. Mode 'cells'
is called internally by link_geog(), but it may be desirable to inspect
where the bridges have been placed. Mode 'lines' returns a set of lines
which can be plotted with the masks to visualize the bridging solutions.
}
\details{
The "v"' bridging algorithm generates Voronoi cells around each
detected island. An island is then connected to all other islands whose
Voronoi cells are adjacent to its own Voronoi cell. The links themselves
are made between the closest cells in each island, producing the
minimum planar graph representation for the landscape (Fall et al. 2007:
Spatial Graphs: Principles and Applications for Habitat Connectivity). This
linkage occurs simultaneously and is driven primarily by functions from
the sf package

The "k" bridging algorithm works by detecting all islands of cells, counting
the number of islands, and assigning each cell a unique island-wise ID.
While the number of unique island IDs is greater than one: for each island,
its four nearest neighbors are identified and the pairs of cells for those
neighbor connections are identified. The cells in all the islands comprising
the neighborhood are then assigned the same numeric island ID, progressively
reducing the number of island IDs. The pairs of cells recorded at each stage
are then returned as the bridging solution. This strategy generally provides
more realistic connections between closely positioned sets of islands
compared to simply joining to a single nearest neighbour, which would be
equivalent to creating a minimum spanning tree for that set. k=4 connections
produces superficially similar results to the "v" algorithm, but connections
are identified using the st_connect function from nngeo, which assumes
Euclidean geometry, while the "v" algorithm uses great circle distances
}
\examples{
#library(terra)
#library(TARDIS)
#gal <- galapagos()
#gal <- crop(gal, extent(-92, -88, -2, 1))
#gal_m <- classify(gal, rcl = matrix(c(-Inf, 0, NA, 0, Inf, 1), ncol = 3, byrow = T), right = F)
#v <- link_mask(gal_m)
#k <- link_mask(gal_m, alg = "k")
#plot(gal_m[[1]])
#plot(v[[1]], add = T)
#plot(k[[1]], add = T, col = 2)
}
