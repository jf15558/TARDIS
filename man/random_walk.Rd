% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random_walk.R
\name{random_walk}
\alias{random_walk}
\title{random_walk}
\usage{
random_walk(
  tardis,
  weights = NULL,
  origin,
  mode = "steps",
  rwlen = 1000,
  restrict = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{tardis}{An object of class 'tardis', produced by create_tardis}

\item{weights}{If not NULL, a vector of weights to be used instead of the
geographic distances in tardis. All entries must be >= 0
and finite (NaN or Inf), or NA. Typically the output of weight_tgraph}

\item{origin}{A simple features collection produced by stp, denoting
the starting points of the random walks.}

\item{mode}{The nature of the random walk, either the number of 'steps' to
take or the 'cost' in terms of the cumulative weight of the edges traversed.}

\item{rwlen}{The length of the random walk as selected by @param mode, either
a single number or a vector with as many elements as pindex, to enable
different walk lengths for each point. When weights = NULL and mode = 'cost',
this  can be directly interpreted as metres covered by the random walk, but
may also be expressed in relation to a user-supplied weighting scheme.}

\item{restrict}{A logical indicating whether the random walk should be
constrained to the same time layer as its origin. TRUE by default.}

\item{verbose}{A logical indicating whether function progress should be
reported to the user.}
}
\value{
If restrict = TRUE (default), then a SpatRaster with each stack
#' layer recording the frequencies of cell visits. If restrict = FALSE,
a list of SpatRasters, with each named layer recording the frequencies of
cells visited in each landscape layer through time
}
\description{
Conduct random walks within a tardis graph. Full traverses in time and space
are possible, but as walks in both these dimensions not are not necessarily
easy to interpret, walks are restricted to the time layer in which they
originate as a default. Walk lengths can be specified by the number of
steps or a target distance to traverse. In the case of the latter, the
walk is terminated at the closest distance to the target as the walks will
not necessarily be able to precisely hit the target distance.
}
\examples{
#library(terra)
#library(TARDIS)

#gal <- galapagos()
#gal <- crop(gal, extent(-92, -88, -2, 1))
#gal_m <- classify(gal, rcl = matrix(c(-Inf, 0, NA, 0, Inf, 1),
#                                    ncol = 3, byrow = T), right = F)
#gt <- create_tardis(gal, times = c(seq(2.25, 0, -0.5), 0), mask = gal_m)

#vars = list(elev = classify(gal, cbind(-Inf, 0, 0)))
#gtw <- weight_tardis(test2, vars = vars,
#                     mfun = function(origin, dest, lnum, ...) {
#                               (origin$hdist^2 + abs(origin$vdist)^2) * 10})

#org <- rbind(c(-89, -1.05, 2), c(-89.5, -0.7, 2))
#dst <- rbind(c(-91.2, -1, 0), c(-91.6, -0.4, 0))
#pts <- stp(test2, rbind(org, dst))

#foo <- random_walk(tardis = gt, weights = gtw, pts[3:4,], rwlen = 1e6)
}
